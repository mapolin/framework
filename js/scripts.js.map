{"version":3,"sources":["_core.js","main.js","module.js"],"names":[],"mappings":";;AAAC,aAAW;AACR;;AAEA,QAAM,UAAU,CAAhB;AACA,QAAM,YAAY,OAAO,SAAP,GAAmB,aAArC;;;AAGA,WAAO,SAAP,IAAoB;AAChB,kBAAU,OADM;AAEhB,gBAAQ,gBAAS,IAAT,EAAe,EAAf,EAAmB,KAAnB,EAA0B;AAC9B,mBAAO,KAAK,MAAL,CAAY,CAAZ,EAAe,WAAf,KAAgC,EAAE,SAAF,CAAY,IAAZ,CAAD,CAAoB,KAApB,CAA0B,CAA1B,CAAtC;;AAEA,gBAAG,KAAK,cAAL,CAAoB,IAApB,KAA6B,CAAC,KAAjC,EAAwC;AACpC,uBAAO,QAAQ,IAAR,CAAa,8BAA8B,IAA9B,GAAqC,gHAAlD,CAAP;AACH;;AAED,gBAAG,KAAK,cAAL,CAAoB,IAApB,KAA6B,KAAhC,EAAuC;AACnC,oBAAG,EAAE,UAAF,CAAa,EAAb,CAAH,EAAqB;AACjB,2BAAO,KAAK,IAAL,IAAa,EAAE,IAAF,CAAO,EAAP,EAAW,KAAK,IAAL,CAAX,CAApB;AACH;AACD,uBAAO,KAAK,IAAL,IAAa,EAAE,QAAF,CAAW,KAAK,IAAL,CAAX,EAAuB,EAAvB,CAApB;AACH;;AAED,gBAAG,EAAE,UAAF,CAAa,EAAb,CAAH,EAAqB;AACjB,uBAAO,KAAK,IAAL,IAAa,EAAE,IAAF,CAAO,EAAP,EAAW,KAAK,IAAL,CAAX,CAApB;AACH;;AAED,eAAG,KAAH,GAAW,IAAX;AACA,mBAAO,KAAK,IAAL,IAAa,EAApB;AACH;AAtBe,KAApB;AAyBH,CAhCA,GAAD;;;ACAA,CAAC,CAAC,UAAS,CAAT,EAAY,GAAZ,EAAiB;;AAEf,MAAE,IAAF,CAAO,YAAW;;;;;;;AAOd,UAAE,IAAF,CAAO,GAAP,EAAY,UAAS,MAAT,EAAiB;AACzB,gBAAG,CAAC,EAAE,UAAF,CAAa,MAAb,CAAD,IAAyB,EAAE,UAAF,CAAa,OAAO,IAApB,CAA5B,EAAuD;AACnD,kBAAE,OAAF,CAAU,OAAO,IAAP,CAAY,IAAZ,CAAiB,MAAjB,CAAV;AACH;AACJ,SAJD;AAMH,KAbD;AAgBH,CAlBA,EAkBE,OAAO,MAAP,IAAiB,IAAI,QAAJ,EAlBnB,EAkBmC,aAAa,EAlBhD;;;ACAA,WAAS,GAAT,EAAc;AACX;;;;AAGA,QAAI,MAAJ,CAAW,YAAX,EAAyB;;;;;AAKrB,eAAO,iBAAW;AACd,oBAAQ,GAAR,CAAY,KAAK,KAAL,GAAa,iBAAzB;;AAEH,SARoB;AASrB,cAAM,gBAAW;AACb,cAAE,OAAF,CAAW,EAAE,IAAF,CAAO,KAAK,KAAZ,EAAmB,IAAnB,CAAX;AACH;AAXoB,KAAzB;AAeH,CAnBA,EAmBE,OAAO,SAAP,CAnBF,CAAD","file":"scripts.js","sourcesContent":["(function() {\n    'use strict';\n\n    const VERSION = 1;\n    const NAMESPACE = window.NAMESPACE = 'Application';\n\n    // define global project namespace\n    window[NAMESPACE] = {\n        _version: VERSION,\n        Extend: function(name, fn, force) {\n            name = name.charAt(0).toUpperCase() + (_.camelCase(name)).slice(1);\n\n            if(this.hasOwnProperty(name) && !force) {\n                return console.warn('Trying to create Method \"' + name + '\" which already exists. Bailing... \\n If you\\'d like to extend and existing object use Extend(name, fn, true).');\n            }\n\n            if(this.hasOwnProperty(name) && force) {\n                if(_.isFunction(fn)) {\n                    return this[name] = _.bind(fn, this[name]);\n                }\n                return this[name] = _.assignIn(this[name], fn);\n            }\n\n            if(_.isFunction(fn)) {\n                return this[name] = _.bind(fn, this[name]);\n            }\n\n            fn._name = name;\n            return this[name] = fn;\n        }\n    };\n\n} ());",";(function($, app) {\n\n    $.call(function() {\n        // Simple initializiation logic:\n        // All Childs of 'app' should be added via .Extend('name', {});\n        // All extending objects must contain a method init() which will be called on document.ready\n        // For examples: all scripts\n        // Loop through all methods and attempt to initialize them,\n        // this way we make sure we don't try to call scripts which aren't included\n        _.each(app, function(method) {\n            if(!_.isFunction(method) && _.isFunction(method.init)) {\n                _.attempt(method.init.call(method));\n            }\n        });\n\n    });\n\n\n})(window.jQuery || new Function(), NAMESPACE || {});","(function(app) {\n    'use strict';\n\n    // only module related functionality goes here\n    app.Extend('ModuleName', {\n        // module functionality goes here\n\n        // automatic module initialization\n        // _init and init methods are mandatory\n        _init: function() {\n            console.log(this._name + ' is initialized');\n            // initialization code goes here\n        },\n        init: function() {\n            _.attempt( _.bind(this._init, this) );\n        }\n    });\n\n\n} (window[NAMESPACE]));"],"sourceRoot":"/source/"}